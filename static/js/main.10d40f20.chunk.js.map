{"version":3,"sources":["Components/Sidebar/styles.module.scss","Components/ItemlistPage/styles.module.scss","Components/UniversalPage/styles.module.scss","logo.svg","Components/Sidebar/index.jsx","Components/UniversalPage/index.jsx","Components/ItemlistPage/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","className","styles","sidebar","to","style","textDecoration","menuElement","UniPage","props","useState","data","setData","useEffect","a","tempObj","elem","Object","keys","map","key","Array","isArray","tempArray","url","axios","get","then","push","name","title","console","log","setTimeout","SmallGrid","elements","el","links","split","join","container","row","Page","constData","setConstData","search","setSearch","alphabeticalSort","setAlphabeticalSort","result","results","filter","element","toLowerCase","indexOf","sort","b","localeCompare","searchArea","onClick","onChange","event","target","value","placeholder","cardBox","card","createBrowserHistory","App","films","setFilms","people","setPeople","planets","setPlanets","species","setSpecies","starships","setStarships","vehicles","setVehicles","display","width","exact","path","ItemlistPage","UniversalPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10d40f20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__2XMMN\",\"menuElement\":\"styles_menuElement__3kAVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__mIYLe\",\"searchArea\":\"styles_searchArea__3jjrf\",\"cardBox\":\"styles_cardBox__24I-6\",\"card\":\"styles_card__18qv2\",\"row\":\"styles_row__3QBpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ozmm\",\"row\":\"styles_row__2vK-w\",\"h3\":\"styles_h3__3wCOB\",\"links\":\"styles_links__3vhpM\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './styles.module.scss';\r\n// import axios from 'axios';\r\n// import {useEffect, useState} from 'react';\r\n\r\nfunction Sidebar() {\r\n    // const [films, setFilms] = useState([]);\r\n    // const [people, setPeople] = useState([]);\r\n    // const [planets, setPlanets] = useState([]);\r\n    // const [species, setSpecies] = useState([]);\r\n    // const [starships, setStarships] = useState([]);\r\n    // const [vehicles, setVehicles] = useState([]);\r\n    // useEffect(()=>{\r\n    //   axios.get('https://swapi.dev/api/films/')\r\n    //   .then((data)=>{\r\n    //     setFilms(data.data.results);\r\n    //   });\r\n    //   axios.get(\"https://swapi.dev/api/people/\")\r\n    //   .then((data)=>{\r\n    //     setPeople(data.data.results);\r\n    //   });\r\n    //   axios.get(\"https://swapi.dev/api/planets/\")\r\n    //   .then((data)=>{\r\n    //     setPlanets(data.data.results);\r\n    //   });\r\n    //   axios.get('https://swapi.dev/api/species/')\r\n    //   .then((data)=>{\r\n    //     setSpecies(data.data.results);\r\n    //   });\r\n    //   axios.get(\"https://swapi.dev/api/starships/\")\r\n    //   .then((data)=>{\r\n    //     setStarships(data.data.results);\r\n    //   });\r\n    //   axios.get(\"https://swapi.dev/api/vehicles/\")\r\n    //   .then((data)=>{\r\n    //     setVehicles(data.data.results);\r\n    //   });\r\n    // },[]);\r\n    return (\r\n        <div className={styles.sidebar}>\r\n            <Link to=\"/films\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Films</div>\r\n            </Link>\r\n            <Link to=\"/people\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>People</div>\r\n            </Link>\r\n            <Link to=\"/planets\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Planets</div>\r\n            </Link>\r\n            <Link to=\"/species\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Species</div>\r\n            </Link>\r\n            <Link to=\"/starships\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Starships</div>\r\n            </Link>\r\n            <Link to=\"/vehicles\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Vehicles</div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from \"./styles.module.scss\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction UniPage(props) {\r\n    const[data, setData] = useState({});\r\n    \r\n    useEffect(async() => {\r\n        let tempObj = props.elem;\r\n        Object.keys(props.elem).map(async(key)=>{\r\n            if(Array.isArray(props.elem[key])){\r\n                let tempArray = [];\r\n                await props.elem[key].map(async(url)=>{\r\n                    await axios.get(url)\r\n                    .then(async(data)=>{\r\n                        await tempArray.push(data.data.name || data.data.title)\r\n                    })\r\n                });\r\n                tempObj[key] = await tempArray;\r\n                console.log(tempArray);\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setData(tempObj);\r\n        }, 2000);\r\n    }, []);\r\n\r\n    const SmallGrid = (props)=>{\r\n        return <div>\r\n                <h1>{props.name}</h1>\r\n                {props.elements.map(el=>{\r\n                    return <Link className={styles.links} to={`/${props.name == 'characters' ? 'people' : props.name}/${el.split(' ').join('_')}`}>{el}</Link>\r\n                })}\r\n              </div> \r\n    };\r\n \r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                Object.keys(data).map(key=>{\r\n                    if(Array.isArray(data[key])){\r\n                        return <SmallGrid name={key} elements={data[key]}/>;\r\n                    }else{\r\n                        return ( \r\n                        <div className={styles.row} key={key}>\r\n                            <h3>{key}</h3>\r\n                            <p>{data[key]}</p>\r\n                        </div>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default UniPage;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Page(props) {\r\n    const[data,setData]=useState([]);\r\n    const [constData,setConstData] = useState([]);\r\n    const [search,setSearch] = useState([]);\r\n    const [alphabeticalSort, setAlphabeticalSort] = useState(false);\r\n    // console.log(props);\r\n\tconsole.log(\"hello\");\r\n    useEffect(()=>{\r\n        axios.get(`https://swapi.dev/api/${props.url}/`)\r\n        .then(result=>{\r\n            console.log(result.data.results);\r\n            setData(result.data.results);\r\n            setConstData(result.data.results)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(search);\r\n        let tempArray = constData.filter(element=>{\r\n            if(element['name'].toLowerCase().indexOf(search.toLowerCase()) == -1){\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n        console.log(tempArray);\r\n        setData(tempArray)\r\n    },[search]);\r\n\r\n    useEffect(()=>{\r\n        let tempArray=[];\r\n        if(alphabeticalSort == true){\r\n            tempArray = data.sort((a,b)=>a.name.localeCompare(b.name));\r\n        }else{\r\n            tempArray = data.sort((a,b)=>b.name.localeCompare(a.name));\r\n        }\r\n        setData(tempArray)\r\n    },[alphabeticalSort])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.searchArea}>\r\n                <button className={styles.sort} onClick={()=>setAlphabeticalSort(!alphabeticalSort)}>SORT BY NAME</button>\r\n                <h2>Live search</h2>\r\n                <input className={styles.search} onChange={event=>setSearch(event.target.value)} placeholder=\"search by name\"/>\r\n            </div>\r\n            <div className={styles.cardBox}>\r\n                {data.map(element=>(\r\n                    <Link to={`/${props.url}/${element.name.split(' ').join('_')}`} className={styles.card}>\r\n                        {Object.keys(element).map(key=>{\r\n                            if(!Array.isArray(element[key])){\r\n                                return <div className={styles.row}>\r\n                                            <h2>{key}</h2> \r\n                                            <p>{element[key]}</p>\r\n                                        </div>\r\n                            }\r\n                        })}\r\n                    </Link>\r\n                ))\r\n                }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport styles from './App.css';\r\n// import { Provider } from 'react-redux';\r\n// import store from './store';\r\nimport { createBrowserHistory } from 'history';\r\nimport Sidebar from './Components/Sidebar';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from \"react\";\r\nimport UniversalPage from './Components/UniversalPage';\r\nimport ItemlistPage from './Components/ItemlistPage';\r\n \r\nimport { BrowserRouter, Switch, Route, Link , browserHistory} from \"react-router-dom\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nfunction App() {\r\n  const [films, setFilms] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [vehicles, setVehicles] = useState([]);\r\n  useEffect(()=>{\r\n    axios.get('https://swapi.dev/api/films/')\r\n    .then((data)=>{\r\n      setFilms(data.data.results);\r\n    });\r\n    axios.get(\"https://swapi.dev/api/people/\")\r\n    .then((data)=>{\r\n      setPeople(data.data.results);\r\n    });\r\n    axios.get(\"https://swapi.dev/api/planets/\")\r\n    .then((data)=>{\r\n      setPlanets(data.data.results);\r\n    });\r\n    axios.get('https://swapi.dev/api/species/')\r\n    .then((data)=>{\r\n      setSpecies(data.data.results);\r\n    });\r\n    axios.get(\"https://swapi.dev/api/starships/\")\r\n    .then((data)=>{\r\n      setStarships(data.data.results);\r\n    });\r\n    axios.get(\"https://swapi.dev/api/vehicles/\")\r\n    .then((data)=>{\r\n      setVehicles(data.data.results);\r\n    });\r\n  },[]);\r\n  return (\r\n   <div style={{display:'flex'}}>\r\n      <Sidebar/>\r\n      <div style={{ width: \"calc(100% - 150px)\"}}>\r\n        <Switch>\r\n        <Route exact path='/films'><ItemlistPage url='people'/></Route>\r\n        <Route exact path=\"/people\"><ItemlistPage url='people'/></Route>\r\n        <Route exact path='/planets'><ItemlistPage url='planets'/></Route>\r\n        <Route exact path=\"/species\"><ItemlistPage url='species'/></Route>\r\n        <Route exact path=\"/starships\"><ItemlistPage url='starships'/></Route>\r\n        <Route exact path=\"/vehicles\"><ItemlistPage url='vehicles'/></Route>\r\n        </Switch>\r\n        <Switch>\r\n          {films.map(elem=>(\r\n            <Route exact path={`/films/${elem.title.split(' ').join('_')}`}>\r\n              <UniversalPage elem={elem}/>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n        <Switch>\r\n          {people.map(elem=>(\r\n            <Route exact path={`/people/${elem.name.split(' ').join('_')}`}>\r\n              <UniversalPage elem={elem}/>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n        <Switch>\r\n          {planets.map(elem=>(\r\n            <Route exact path={`/planets/${elem.name.split(' ').join('_')}`}>\r\n              <UniversalPage elem={elem}/>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n        <Switch>\r\n          {species.map(elem=>(\r\n            <Route exact path={`/species/${elem.name.split(' ').join('_')}`}>\r\n              <UniversalPage elem={elem}/>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n        <Switch>\r\n          {starships.map(elem=>(\r\n            <Route exact path={`/starships/${elem.name.split(' ').join('_')}`}>\r\n              <UniversalPage elem={elem}/>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n        <Switch>\r\n          {vehicles.map(elem=>(\r\n            <Route exact path={`/vehicles/${elem.name.split(' ').join('_')}`}>\r\n              <UniversalPage elem={elem}/>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n      </div>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <HashRouter>\r\n    <App />\r\n\t</HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}