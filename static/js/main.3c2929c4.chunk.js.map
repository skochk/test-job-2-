{"version":3,"sources":["Components/ItemlistPage/styles.module.scss","Components/UniversalPage/styles.module.scss","logo.svg","Components/Sidebar/index.jsx","Components/UniversalPage/index.jsx","Components/ItemlistPage/index.jsx","App.js","serviceWorker.js","index.js","Components/Sidebar/styles.module.scss"],"names":["module","exports","Sidebar","className","styles","sidebar","to","style","textDecoration","menuElement","SmallGrid","props","console","log","name","elements","map","el","idx","url","split","links","UniPage","match","useState","data","setData","getData","a","axios","get","tempObj","Object","keys","key","Array","isArray","tempArray","then","push","setTimeout","useEffect","container","length","row","Page","constData","setConstData","search","setSearch","alphabeticalSort","setAlphabeticalSort","path","result","results","filter","element","toLowerCase","indexOf","sort","b","title","localeCompare","searchArea","onClick","onChange","event","target","value","placeholder","cardBox","substr","replace","card","createBrowserHistory","App","history","display","width","exact","component","ItemlistPage","UniversalPage","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c2929c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__mIYLe\",\"searchArea\":\"styles_searchArea__3jjrf\",\"cardBox\":\"styles_cardBox__24I-6\",\"card\":\"styles_card__18qv2\",\"row\":\"styles_row__3QBpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ozmm\",\"row\":\"styles_row__2vK-w\",\"h3\":\"styles_h3__3wCOB\",\"links\":\"styles_links__3vhpM\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styles from './styles.module.scss';\n\nfunction Sidebar() {\n    return (\n        <div className={styles.sidebar}>\n            <Link to=\"/films\"  style={{textDecoration: \"none\"}}>\n                <div className={styles.menuElement}>Films</div>\n            </Link>\n            <Link to=\"/people\"  style={{textDecoration: \"none\"}}>\n                <div className={styles.menuElement}>People</div>\n            </Link>\n            <Link to=\"/planets\"  style={{textDecoration: \"none\"}}>\n                <div className={styles.menuElement}>Planets</div>\n            </Link>\n            <Link to=\"/species\"  style={{textDecoration: \"none\"}}>\n                <div className={styles.menuElement}>Species</div>\n            </Link>\n            <Link to=\"/starships\"  style={{textDecoration: \"none\"}}>\n                <div className={styles.menuElement}>Starships</div>\n            </Link>\n            <Link to=\"/vehicles\"  style={{textDecoration: \"none\"}}>\n                <div className={styles.menuElement}>Vehicles</div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from \"./styles.module.scss\";\nimport {Link} from 'react-router-dom';\n\nconst SmallGrid = (props)=>{\n    console.log(props)\n    return <div>\n            <h1>{props.name}</h1>\n            {props.elements && props.elements.map((el, idx)=>{\n                return <Link to={`${el.url.split(\"http://swapi.dev/api\")[1]}`} className={styles.links}>{el.name}</Link>\n            })}\n          </div> \n};\n\nfunction UniPage({match}) {\n    const[data, setData] = useState({});\n    const getData = async () => {\n        try {\n            const { data } = await axios.get(`https://swapi.dev/api${match.url}`)\n            let tempObj = data;\n            console.log('temp',tempObj);\n            Object.keys(tempObj).map((key)=>{\n                if(Array.isArray(tempObj[key])){\n                    let tempArray = [];\n                    tempObj[key].map((url)=>{\n                        axios.get(url)\n                        .then((data)=>{\n                            tempArray.push(data.data)\n                        })\n                    });\n                    tempObj[key] = tempArray;\n                }\n            });\n            setTimeout(() => {\n                setData(tempObj);  \n            }, 1000);\n            \n\n        } catch (err ) {\n            // errors\n            console.log(err,\"connection error\")\n        }\n    } \n\n    useEffect(() => {\n        getData()\n    }, []);\n \n    return (\n        <div className={styles.container}>\n            {\n                Object.keys(data).length !=0 ? \n                <>{\n                    Object.keys(data).map(key=>{\n                        if(Array.isArray(data[key])){\n                            return <SmallGrid name={key} url={match} elements={data[key]}/>;\n                        }else{\n                            return ( \n                            <div className={styles.row} key={key}>\n                                <h3>{key}</h3>\n                                <p>{data[key]}</p>\n                            </div>\n                            )\n                        }\n                    })\n                }</> \n                : <div>Loading...</div>\n            }\n        </div>\n    ) \n}\n\nexport default UniPage;\n","import React from 'react';\nimport styles from './styles.module.scss';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nfunction Page({match}) {\n    const[data,setData]=useState([]);\n    const [constData,setConstData] = useState([]);\n    const [search,setSearch] = useState([]);\n    const [alphabeticalSort, setAlphabeticalSort] = useState(false);\n\n    useEffect(()=>{\n        axios.get(`http://swapi.dev/api${match.path}/`)\n        .then(result=>{\n            setData(result.data.results);\n            setConstData(result.data.results)\n        });\n        \n    },[])\n\n    useEffect(()=>{\n        if(match.url = '/films'){\n            let tempArray = constData.filter(element=>{\n                if(element['title'].toLowerCase().indexOf(search.toLowerCase()) == -1){\n                    return false;\n                }\n                return true;\n            })\n            setData(tempArray);\n        }else{\n            let tempArray = constData.filter(element=>{\n                if(element['name'].toLowerCase().indexOf(search.toLowerCase()) == -1){\n                    return false;\n                }\n                return true;\n            })\n            setData(tempArray);\n        }\n        \n    },[search]);\n\n    useEffect(()=>{\n        let tempArray=[];\n        if(match.url = '/films'){\n            if(alphabeticalSort == true){\n                tempArray = data.sort((a,b)=>a.title.localeCompare(b.name));\n            }else{\n                tempArray = data.sort((a,b)=>b.title.localeCompare(a.name));\n            }\n            setData(tempArray);\n        }else{\n            if(alphabeticalSort == true){\n                tempArray = data.sort((a,b)=>a.name.localeCompare(b.name));\n            }else{\n                tempArray = data.sort((a,b)=>b.name.localeCompare(a.name));\n            }\n            setData(tempArray);\n        }\n    },[alphabeticalSort])\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.searchArea}>\n                <button className={styles.sort} onClick={()=>setAlphabeticalSort(!alphabeticalSort)}>SORT BY NAME</button>\n                <h2>Live search</h2>                                \n                <input className={styles.search} onChange={event=>setSearch(event.target.value)} placeholder=\"search by name\"/>\n            </div>\n            <div className={styles.cardBox}>\n                {data.map(element=>(\n                    <Link to={`${match.path}/${element.url.substr(-3).replace(/\\//g,'')}`} className={styles.card}>\n                        {Object.keys(element).map(key=>{\n                            if(!Array.isArray(element[key])){\n                                return <div className={styles.row}>\n                                            <h2>{key}</h2> \n                                            <p>{element[key]}</p>\n                                        </div>\n                            }\n                        })}\n                    </Link>\n                ))\n                }\n                </div>\n        </div>\n    )\n}\n\nexport default Page;\n","import React from 'react';\nimport logo from './logo.svg';\nimport styles from './App.css';\n// import { Provider } from 'react-redux';\n// import store from './store';\nimport { createBrowserHistory } from 'history';\nimport Sidebar from './Components/Sidebar';\nimport axios from 'axios';\nimport {useState, useEffect} from \"react\";\nimport UniversalPage from './Components/UniversalPage';\nimport ItemlistPage from './Components/ItemlistPage';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n \nimport { BrowserRouter, Switch, Route, Link , browserHistory} from \"react-router-dom\";\n\nexport const history = createBrowserHistory()\n\nfunction App() {\n  const [films, setFilms] = useState([]);\n  const [people, setPeople] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n\n  return (\n    <Router history={{}}>\n\n   <div style={{display:'flex'}}>\n      <Sidebar/>\n      <div style={{ width: \"calc(100% - 150px)\"}}>\n          <Route exact path='/films' component={ItemlistPage}></Route>\n          <Route exact path=\"/people\" component={ItemlistPage}></Route>\n          <Route exact path='/planets' component={ItemlistPage}></Route>\n          <Route exact path=\"/species\" component={ItemlistPage}></Route>\n          <Route exact path=\"/starships\" component={ItemlistPage}></Route>\n          <Route exact path=\"/vehicles\" component={ItemlistPage}></Route>\n          <Route  path=\"/films/:id\" component={UniversalPage}></Route>\n          <Route  path=\"/people/:id\" component={UniversalPage}></Route> \n          <Route  path=\"/planets/:id\" component={UniversalPage}></Route>\n          <Route  path=\"/species/:id\" component={UniversalPage}></Route>\n          <Route  path=\"/starships/:id\" component={UniversalPage}></Route>\n          <Route  path=\"/vehicles/:id\" component={UniversalPage}></Route>\n      </div>\n   </div>\n   </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__2XMMN\",\"menuElement\":\"styles_menuElement__3kAVY\"};"],"sourceRoot":""}