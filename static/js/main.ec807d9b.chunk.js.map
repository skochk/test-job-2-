{"version":3,"sources":["Components/ItemlistPage/styles.module.scss","Components/UniversalPage/styles.module.scss","logo.svg","Components/Sidebar/index.jsx","Components/UniversalPage/index.jsx","Components/ItemlistPage/index.jsx","App.js","serviceWorker.js","index.js","Components/Sidebar/styles.module.scss"],"names":["module","exports","Sidebar","className","styles","sidebar","to","style","textDecoration","menuElement","SmallGrid","props","console","log","name","elements","map","el","idx","url","split","links","UniPage","match","useState","data","setData","getData","a","axios","get","tempObj","Object","keys","key","Array","isArray","tempArray","replace","then","push","setTimeout","useEffect","container","length","row","Page","constData","setConstData","search","setSearch","alphabeticalSort","setAlphabeticalSort","path","result","results","filter","element","toLowerCase","indexOf","sort","b","title","localeCompare","searchArea","onClick","onChange","event","target","value","placeholder","cardBox","substr","card","createBrowserHistory","App","history","display","width","exact","component","ItemlistPage","UniversalPage","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec807d9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3G_3A\",\"searchArea\":\"styles_searchArea__39qGd\",\"cardBox\":\"styles_cardBox__3Tdxl\",\"card\":\"styles_card__3MHmM\",\"row\":\"styles_row__6YudX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__t8lyK\",\"row\":\"styles_row__1iwad\",\"h3\":\"styles_h3__2j8MY\",\"links\":\"styles_links__36VqX\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './styles.module.scss';\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className={styles.sidebar}>\r\n            <Link to=\"/films\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Films</div>\r\n            </Link>\r\n            <Link to=\"/people\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>People</div>\r\n            </Link>\r\n            <Link to=\"/planets\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Planets</div>\r\n            </Link>\r\n            <Link to=\"/species\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Species</div>\r\n            </Link>\r\n            <Link to=\"/starships\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Starships</div>\r\n            </Link>\r\n            <Link to=\"/vehicles\"  style={{textDecoration: \"none\"}}>\r\n                <div className={styles.menuElement}>Vehicles</div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from \"./styles.module.scss\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SmallGrid = (props)=>{\r\n    console.log(props)\r\n    return <div>\r\n            <h1>{props.name}</h1>\r\n            {props.elements && props.elements.map((el, idx)=>{\r\n                return <Link to={`${el.url.split(\"http://swapi.dev/api\")[1]}`} className={styles.links}>{el.name}</Link>\r\n            })}\r\n          </div> \r\n};\r\n\r\nfunction UniPage({match}) {\r\n    const[data, setData] = useState({});\r\n    const getData = async () => {\r\n\t\tconsole.log(match);\r\n        try {\r\n            const { data } = await axios.get(`https://swapi.dev/api${match.url}/`)\r\n            let tempObj = data;\r\n            console.log('temp',tempObj);\r\n            Object.keys(tempObj).map((key)=>{\r\n                if(Array.isArray(tempObj[key])){\r\n                    let tempArray = [];\r\n                    tempObj[key].map((url)=>{\r\n\t\t\t\t\t\tconsole.log(url);\r\n                        axios.get(url.replace('http','https'))\r\n                        .then((data)=>{\r\n                            tempArray.push(data.data)\r\n                        })\r\n                    });\r\n                    tempObj[key] = tempArray;\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n                setData(tempObj);  \r\n            }, 1000);\r\n            \r\n\r\n        } catch (err ) {\r\n            // errors\r\n            console.log(err,\"connection error\")\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n \r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                Object.keys(data).length !=0 ? \r\n                <>{\r\n                    Object.keys(data).map(key=>{\r\n                        if(Array.isArray(data[key])){\r\n                            return <SmallGrid name={key} url={match} elements={data[key]}/>;\r\n                        }else{\r\n                            return ( \r\n                            <div className={styles.row} key={key}>\r\n                                <h3>{key}</h3>\r\n                                <p>{data[key]}</p>\r\n                            </div>\r\n                            )\r\n                        }\r\n                    })\r\n                }</> \r\n                : <div>Loading...</div>\r\n            }\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default UniPage;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Page({match}) {\r\n    const[data,setData]=useState([]);\r\n    const [constData,setConstData] = useState([]);\r\n    const [search,setSearch] = useState([]);\r\n    const [alphabeticalSort, setAlphabeticalSort] = useState(false);\r\n\r\n    useEffect(()=>{\r\n\t\tconsole.log(match);\r\n        axios.get(`https://swapi.dev/api${match.path}/`)\r\n        .then(result=>{\r\n            setData(result.data.results);\r\n            setConstData(result.data.results)\r\n        });\r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(match.url = '/films'){\r\n            let tempArray = constData.filter(element=>{\r\n                if(element['title'].toLowerCase().indexOf(search.toLowerCase()) == -1){\r\n                    return false;\r\n                }\r\n                return true;\r\n            })\r\n            setData(tempArray);\r\n        }else{\r\n            let tempArray = constData.filter(element=>{\r\n                if(element['name'].toLowerCase().indexOf(search.toLowerCase()) == -1){\r\n                    return false;\r\n                }\r\n                return true;\r\n            })\r\n            setData(tempArray);\r\n        }\r\n        \r\n    },[search]);\r\n\r\n    useEffect(()=>{\r\n        let tempArray=[];\r\n        if(match.url = '/films'){\r\n            if(alphabeticalSort == true){\r\n                tempArray = data.sort((a,b)=>a.title.localeCompare(b.name));\r\n            }else{\r\n                tempArray = data.sort((a,b)=>b.title.localeCompare(a.name));\r\n            }\r\n            setData(tempArray);\r\n        }else{\r\n            if(alphabeticalSort == true){\r\n                tempArray = data.sort((a,b)=>a.name.localeCompare(b.name));\r\n            }else{\r\n                tempArray = data.sort((a,b)=>b.name.localeCompare(a.name));\r\n            }\r\n            setData(tempArray);\r\n        }\r\n    },[alphabeticalSort])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.searchArea}>\r\n                <button className={styles.sort} onClick={()=>setAlphabeticalSort(!alphabeticalSort)}>SORT BY NAME</button>\r\n                <h2>Live search</h2>                                \r\n                <input className={styles.search} onChange={event=>setSearch(event.target.value)} placeholder=\"search by name\"/>\r\n            </div>\r\n            <div className={styles.cardBox}>\r\n                {data.map(element=>(\r\n                    <Link to={`${match.path}/${element.url.substr(-3).replace(/\\//g,'')}`} className={styles.card}>\r\n                        {Object.keys(element).map(key=>{\r\n                            if(!Array.isArray(element[key])){\r\n                                return <div className={styles.row}>\r\n                                            <h2>{key}</h2> \r\n                                            <p>{element[key]}</p>\r\n                                        </div>\r\n                            }\r\n                        })}\r\n                    </Link>\r\n                ))\r\n                }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport styles from './App.css';\r\n// import { Provider } from 'react-redux';\r\n// import store from './store';\r\nimport { createBrowserHistory } from 'history';\r\nimport Sidebar from './Components/Sidebar';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from \"react\";\r\nimport UniversalPage from './Components/UniversalPage';\r\nimport ItemlistPage from './Components/ItemlistPage';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n \r\nimport { BrowserRouter, Switch, Route, Link , browserHistory} from \"react-router-dom\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nfunction App() {\r\n  const [films, setFilms] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [vehicles, setVehicles] = useState([]);\r\n\r\n  return (\r\n    <Router history={{}}>\r\n\r\n   <div style={{display:'flex'}}>\r\n      <Sidebar/>\r\n      <div style={{ width: \"calc(100% - 150px)\"}}>\r\n          <Route exact path='/films' component={ItemlistPage}></Route>\r\n          <Route exact path=\"/people\" component={ItemlistPage}></Route>\r\n          <Route exact path='/planets' component={ItemlistPage}></Route>\r\n          <Route exact path=\"/species\" component={ItemlistPage}></Route>\r\n          <Route exact path=\"/starships\" component={ItemlistPage}></Route>\r\n          <Route exact path=\"/vehicles\" component={ItemlistPage}></Route>\r\n          <Route  path=\"/films/:id\" component={UniversalPage}></Route>\r\n          <Route  path=\"/people/:id\" component={UniversalPage}></Route> \r\n          <Route  path=\"/planets/:id\" component={UniversalPage}></Route>\r\n          <Route  path=\"/species/:id\" component={UniversalPage}></Route>\r\n          <Route  path=\"/starships/:id\" component={UniversalPage}></Route>\r\n          <Route  path=\"/vehicles/:id\" component={UniversalPage}></Route>\r\n      </div>\r\n   </div>\r\n   </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__3V53T\",\"menuElement\":\"styles_menuElement__2UBGM\"};"],"sourceRoot":""}